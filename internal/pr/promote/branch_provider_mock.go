// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package promote

import (
	"sync"
)

// Ensure, that BranchProviderMock does implement BranchProvider.
// If this is not the case, regenerate this file with moq.
var _ BranchProvider = &BranchProviderMock{}

// BranchProviderMock is a mock implementation of BranchProvider.
//
//	func TestSomethingThatUsesBranchProvider(t *testing.T) {
//
//		// make and configure a mocked BranchProvider
//		mockedBranchProvider := &BranchProviderMock{
//			GetCurrentBranchFunc: func() (string, error) {
//				panic("mock out the GetCurrentBranch method")
//			},
//		}
//
//		// use mockedBranchProvider in code that requires BranchProvider
//		// and then make assertions.
//
//	}
type BranchProviderMock struct {
	// GetCurrentBranchFunc mocks the GetCurrentBranch method.
	GetCurrentBranchFunc func() (string, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetCurrentBranch holds details about calls to the GetCurrentBranch method.
		GetCurrentBranch []struct {
		}
	}
	lockGetCurrentBranch sync.RWMutex
}

// GetCurrentBranch calls GetCurrentBranchFunc.
func (mock *BranchProviderMock) GetCurrentBranch() (string, error) {
	callInfo := struct {
	}{}
	mock.lockGetCurrentBranch.Lock()
	mock.calls.GetCurrentBranch = append(mock.calls.GetCurrentBranch, callInfo)
	mock.lockGetCurrentBranch.Unlock()
	if mock.GetCurrentBranchFunc == nil {
		var (
			sOut   string
			errOut error
		)
		return sOut, errOut
	}
	return mock.GetCurrentBranchFunc()
}

// GetCurrentBranchCalls gets all the calls that were made to GetCurrentBranch.
// Check the length with:
//
//	len(mockedBranchProvider.GetCurrentBranchCalls())
func (mock *BranchProviderMock) GetCurrentBranchCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetCurrentBranch.RLock()
	calls = mock.calls.GetCurrentBranch
	mock.lockGetCurrentBranch.RUnlock()
	return calls
}
