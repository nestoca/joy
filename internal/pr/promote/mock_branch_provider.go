// Code generated by MockGen. DO NOT EDIT.
// Source: branch_provider.go

// Package promote is a generated GoMock package.
package promote

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBranchProvider is a mock of BranchProvider interface.
type MockBranchProvider struct {
	ctrl     *gomock.Controller
	recorder *MockBranchProviderMockRecorder
}

// MockBranchProviderMockRecorder is the mock recorder for MockBranchProvider.
type MockBranchProviderMockRecorder struct {
	mock *MockBranchProvider
}

// NewMockBranchProvider creates a new mock instance.
func NewMockBranchProvider(ctrl *gomock.Controller) *MockBranchProvider {
	mock := &MockBranchProvider{ctrl: ctrl}
	mock.recorder = &MockBranchProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBranchProvider) EXPECT() *MockBranchProviderMockRecorder {
	return m.recorder
}

// GetCurrentBranch mocks base method.
func (m *MockBranchProvider) GetCurrentBranch() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentBranch")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentBranch indicates an expected call of GetCurrentBranch.
func (mr *MockBranchProviderMockRecorder) GetCurrentBranch() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentBranch", reflect.TypeOf((*MockBranchProvider)(nil).GetCurrentBranch))
}
